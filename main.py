{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9d001726",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:28.430483Z",
     "iopub.status.busy": "2024-07-31T19:00:28.428966Z",
     "iopub.status.idle": "2024-07-31T19:00:32.289931Z",
     "shell.execute_reply": "2024-07-31T19:00:32.288784Z"
    },
    "papermill": {
     "duration": 3.880522,
     "end_time": "2024-07-31T19:00:32.292761",
     "exception": false,
     "start_time": "2024-07-31T19:00:28.412239",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import nltk\n",
    "from nltk.corpus import stopwords, wordnet\n",
    "from nltk.stem import PorterStemmer\n",
    "from nltk.tokenize import word_tokenize\n",
    "import re\n",
    "import warnings\n",
    "from sklearn.base import BaseEstimator, TransformerMixin\n",
    "import random\n",
    "from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
    "from sklearn.pipeline import make_pipeline, Pipeline\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import LabelEncoder, StandardScaler, MinMaxScaler, RobustScaler, Normalizer\n",
    "warnings.filterwarnings('ignore')\n",
    "pd.set_option('display.max_columns', None)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5641e0ed",
   "metadata": {
    "papermill": {
     "duration": 0.013782,
     "end_time": "2024-07-31T19:00:32.321580",
     "exception": false,
     "start_time": "2024-07-31T19:00:32.307798",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<div style=\"text-align:center; background-color:#dc3545; padding:20px;\">\n",
    "  <h1 style=\"font-size:36px; color:#ffeeba;\"><b>1.EDA (Explotary Data Analysis)</b></h1>\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "30e768d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:32.352757Z",
     "iopub.status.busy": "2024-07-31T19:00:32.352194Z",
     "iopub.status.idle": "2024-07-31T19:00:32.512965Z",
     "shell.execute_reply": "2024-07-31T19:00:32.511887Z"
    },
    "papermill": {
     "duration": 0.179559,
     "end_time": "2024-07-31T19:00:32.515798",
     "exception": false,
     "start_time": "2024-07-31T19:00:32.336239",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 16000 entries, 0 to 15999\n",
      "Data columns (total 2 columns):\n",
      " #   Column   Non-Null Count  Dtype \n",
      "---  ------   --------------  ----- \n",
      " 0   Text     16000 non-null  object\n",
      " 1   Emotion  16000 non-null  object\n",
      "dtypes: object(2)\n",
      "memory usage: 250.1+ KB\n",
      "-----------------------------------------------------------------------\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2000 entries, 0 to 1999\n",
      "Data columns (total 2 columns):\n",
      " #   Column   Non-Null Count  Dtype \n",
      "---  ------   --------------  ----- \n",
      " 0   Text     2000 non-null   object\n",
      " 1   Emotion  2000 non-null   object\n",
      "dtypes: object(2)\n",
      "memory usage: 31.4+ KB\n",
      "-----------------------------------------------------------------------\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2000 entries, 0 to 1999\n",
      "Data columns (total 2 columns):\n",
      " #   Column   Non-Null Count  Dtype \n",
      "---  ------   --------------  ----- \n",
      " 0   Text     2000 non-null   object\n",
      " 1   Emotion  2000 non-null   object\n",
      "dtypes: object(2)\n",
      "memory usage: 31.4+ KB\n"
     ]
    }
   ],
   "source": [
    "file_path = '/kaggle/input/emotions-dataset-for-nlp/val.txt'\n",
    "val_df = pd.read_csv(file_path, sep=';', header=None, names=['Text', 'Emotion'])\n",
    "file_path = '/kaggle/input/emotions-dataset-for-nlp/test.txt'\n",
    "test_df = pd.read_csv(file_path, sep=';', header=None, names=['Text', 'Emotion'])\n",
    "file_path = '/kaggle/input/emotions-dataset-for-nlp/train.txt'\n",
    "train_df = pd.read_csv(file_path, sep=';', header=None, names=['Text', 'Emotion'])\n",
    "\n",
    "train_df.info()\n",
    "print('-----------------------------------------------------------------------')\n",
    "test_df.info()\n",
    "print('-----------------------------------------------------------------------')\n",
    "val_df.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a91885c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:32.546808Z",
     "iopub.status.busy": "2024-07-31T19:00:32.546392Z",
     "iopub.status.idle": "2024-07-31T19:00:32.557668Z",
     "shell.execute_reply": "2024-07-31T19:00:32.556515Z"
    },
    "papermill": {
     "duration": 0.02946,
     "end_time": "2024-07-31T19:00:32.560206",
     "exception": false,
     "start_time": "2024-07-31T19:00:32.530746",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Emotion\n",
       "joy         704\n",
       "sadness     550\n",
       "anger       275\n",
       "fear        212\n",
       "love        178\n",
       "surprise     81\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "val_df['Emotion'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa644cec",
   "metadata": {
    "papermill": {
     "duration": 0.014702,
     "end_time": "2024-07-31T19:00:32.589385",
     "exception": false,
     "start_time": "2024-07-31T19:00:32.574683",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Here We will count the percentage of each category in each data frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9f4e6fe2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:32.619832Z",
     "iopub.status.busy": "2024-07-31T19:00:32.619404Z",
     "iopub.status.idle": "2024-07-31T19:00:32.638487Z",
     "shell.execute_reply": "2024-07-31T19:00:32.636945Z"
    },
    "papermill": {
     "duration": 0.037454,
     "end_time": "2024-07-31T19:00:32.641106",
     "exception": false,
     "start_time": "2024-07-31T19:00:32.603652",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Emotion\n",
      "joy         35.20\n",
      "sadness     27.50\n",
      "anger       13.75\n",
      "fear        10.60\n",
      "love         8.90\n",
      "surprise     4.05\n",
      "Name: proportion, dtype: float64\n",
      "-----------------------------------------------------------------------\n",
      "Emotion\n",
      "joy         33.51250\n",
      "sadness     29.16250\n",
      "anger       13.49375\n",
      "fear        12.10625\n",
      "love         8.15000\n",
      "surprise     3.57500\n",
      "Name: proportion, dtype: float64\n",
      "-----------------------------------------------------------------------\n",
      "Emotion\n",
      "joy         34.75\n",
      "sadness     29.05\n",
      "anger       13.75\n",
      "fear        11.20\n",
      "love         7.95\n",
      "surprise     3.30\n",
      "Name: proportion, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "percentage_appearance = val_df['Emotion'].value_counts(normalize=True) * 100\n",
    "print(percentage_appearance)\n",
    "print('-----------------------------------------------------------------------')\n",
    "percentage_appearance = train_df['Emotion'].value_counts(normalize=True) * 100\n",
    "print(percentage_appearance)\n",
    "print('-----------------------------------------------------------------------')\n",
    "percentage_appearance = test_df['Emotion'].value_counts(normalize=True) * 100\n",
    "print(percentage_appearance)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a6499d5",
   "metadata": {
    "papermill": {
     "duration": 0.014624,
     "end_time": "2024-07-31T19:00:32.670853",
     "exception": false,
     "start_time": "2024-07-31T19:00:32.656229",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### It seems like \"love\" and \"surprise\" have low representation, likely due to data scarcity. Removing these emotions could enhance model performance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5a26e0f0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:32.702287Z",
     "iopub.status.busy": "2024-07-31T19:00:32.701865Z",
     "iopub.status.idle": "2024-07-31T19:00:32.732305Z",
     "shell.execute_reply": "2024-07-31T19:00:32.731093Z"
    },
    "papermill": {
     "duration": 0.049244,
     "end_time": "2024-07-31T19:00:32.735083",
     "exception": false,
     "start_time": "2024-07-31T19:00:32.685839",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Emotion\n",
       "joy        5362\n",
       "sadness    4666\n",
       "anger      2159\n",
       "fear       1937\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "val_df = val_df.drop(val_df[(val_df['Emotion'] == 'surprise') | (val_df['Emotion'] == 'love')].index)\n",
    "test_df = test_df.drop(test_df[(test_df['Emotion'] == 'surprise') | (test_df['Emotion'] == 'love')].index)\n",
    "train_df = train_df.drop(train_df[(train_df['Emotion'] == 'surprise') | (train_df['Emotion'] == 'love')].index)\n",
    "train_df['Emotion'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "80aee6dd",
   "metadata": {
    "papermill": {
     "duration": 0.014396,
     "end_time": "2024-07-31T19:00:32.764462",
     "exception": false,
     "start_time": "2024-07-31T19:00:32.750066",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### In this step we will get the text with the maximum length and it's emotion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "aa638ecc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:32.796207Z",
     "iopub.status.busy": "2024-07-31T19:00:32.795809Z",
     "iopub.status.idle": "2024-07-31T19:00:32.806863Z",
     "shell.execute_reply": "2024-07-31T19:00:32.805651Z"
    },
    "papermill": {
     "duration": 0.029799,
     "end_time": "2024-07-31T19:00:32.809628",
     "exception": false,
     "start_time": "2024-07-31T19:00:32.779829",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the text is: i couldnt hellip even when it made my heart ache to simply look at you hellip because i loved you so much and i knew you would never return my feelings hellip and i couldnt bring myself to hate you for the idiotic stunt you pulled in the other room either though i do ask that you dont repeat it\n",
      "the emotion is: sadness\n"
     ]
    }
   ],
   "source": [
    "val_df['text_length'] = val_df['Text'].apply(len)\n",
    "idx_max_length = val_df['text_length'].idxmax()\n",
    "emo = val_df.loc[idx_max_length, 'Emotion']\n",
    "txt = val_df.loc[idx_max_length, 'Text']\n",
    "print('the text is: ' + txt)\n",
    "print('the emotion is: ' + emo)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1cc93374",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:32.841732Z",
     "iopub.status.busy": "2024-07-31T19:00:32.840795Z",
     "iopub.status.idle": "2024-07-31T19:00:52.894507Z",
     "shell.execute_reply": "2024-07-31T19:00:52.893241Z"
    },
    "papermill": {
     "duration": 20.072602,
     "end_time": "2024-07-31T19:00:52.897203",
     "exception": false,
     "start_time": "2024-07-31T19:00:32.824601",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[nltk_data] Error loading stopwords: <urlopen error [Errno -3]\n",
      "[nltk_data]     Temporary failure in name resolution>\n",
      "['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', \"you're\", \"you've\", \"you'll\", \"you'd\", 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', \"she's\", 'her', 'hers', 'herself', 'it', \"it's\", 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', \"that'll\", 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', \"don't\", 'should', \"should've\", 'now', 'd', 'll', 'm', 'o', 're', 've', 'y', 'ain', 'aren', \"aren't\", 'couldn', \"couldn't\", 'didn', \"didn't\", 'doesn', \"doesn't\", 'hadn', \"hadn't\", 'hasn', \"hasn't\", 'haven', \"haven't\", 'isn', \"isn't\", 'ma', 'mightn', \"mightn't\", 'mustn', \"mustn't\", 'needn', \"needn't\", 'shan', \"shan't\", 'shouldn', \"shouldn't\", 'wasn', \"wasn't\", 'weren', \"weren't\", 'won', \"won't\", 'wouldn', \"wouldn't\"]\n"
     ]
    }
   ],
   "source": [
    "nltk.download('stopwords')\n",
    "print(stopwords.words('english'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3bb03ff3",
   "metadata": {
    "papermill": {
     "duration": 0.01771,
     "end_time": "2024-07-31T19:00:52.930136",
     "exception": false,
     "start_time": "2024-07-31T19:00:52.912426",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### This is a Text Processing class that take any text and convert it to a lower case and stemming it as the user is need."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72155807",
   "metadata": {
    "papermill": {
     "duration": 0.014757,
     "end_time": "2024-07-31T19:00:52.962140",
     "exception": false,
     "start_time": "2024-07-31T19:00:52.947383",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<div style=\"text-align:center; background-color:#dc3545; padding:20px;\">\n",
    "  <h1 style=\"font-size:36px; color:#ffeeba;\"><b>2.Text Processing </b></h1>\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1b2ca642",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:52.993807Z",
     "iopub.status.busy": "2024-07-31T19:00:52.993391Z",
     "iopub.status.idle": "2024-07-31T19:00:53.004254Z",
     "shell.execute_reply": "2024-07-31T19:00:53.003115Z"
    },
    "papermill": {
     "duration": 0.029982,
     "end_time": "2024-07-31T19:00:53.007120",
     "exception": false,
     "start_time": "2024-07-31T19:00:52.977138",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "def text_processing(text):\n",
    "    text = re.sub('[^a-zA-Z]', ' ', text) # remove any non-alphabet characters\n",
    "    text = text.lower()\n",
    "    text = text.split()\n",
    "    ps = PorterStemmer()\n",
    "    text = [ps.stem(word) for word in text if word not in set(stopwords.words('english'))]\n",
    "    text = ' '.join(text)\n",
    "    return text\n",
    "\n",
    "\n",
    "class TextProcessor(BaseEstimator, TransformerMixin):\n",
    "    def __init__(self):\n",
    "        pass\n",
    "    \n",
    "    def fit(self, X, y=None):\n",
    "        return self\n",
    "    \n",
    "    def transform(self, X):\n",
    "        return [text_processing(text) for text in X]\n",
    "\"\"\"\n",
    "class TextProcessor(BaseEstimator, TransformerMixin):\n",
    "    def __init__(self, lower=False, stem=False):\n",
    "        self.lower = lower\n",
    "        self.stem = stem\n",
    "    \n",
    "    def fit(self, X, y=None):\n",
    "        return self\n",
    "    \n",
    "    def transform(self, X):\n",
    "        def text_processing(text):\n",
    "            processed_text = re.sub('[^a-zA-Z]', ' ', text) # remove any non-alphabet characters\n",
    "            if self.lower:\n",
    "                processed_text = processed_text.lower()\n",
    "            processed_text = processed_text.split()\n",
    "            if self.stem:\n",
    "                ps = PorterStemmer()\n",
    "                processed_text = [ps.stem(word) for word in processed_text if word not in set(stopwords.words('english'))]\n",
    "            processed_text = ' '.join(processed_text)\n",
    "            return processed_text\n",
    "        \n",
    "        return [text_processing(text) for text in X]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76642193",
   "metadata": {
    "papermill": {
     "duration": 0.015233,
     "end_time": "2024-07-31T19:00:53.038092",
     "exception": false,
     "start_time": "2024-07-31T19:00:53.022859",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "### I've developed a confusion matrix function to evaluate classification model performance using input features X_data and corresponding labels Y_data. \n",
    "#### NOTE: The diagonal of the matrix represents correct predictions, while off-diagonal elements indicate misclassifications."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f2cf3701",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:53.081777Z",
     "iopub.status.busy": "2024-07-31T19:00:53.080457Z",
     "iopub.status.idle": "2024-07-31T19:00:53.096473Z",
     "shell.execute_reply": "2024-07-31T19:00:53.095247Z"
    },
    "papermill": {
     "duration": 0.041766,
     "end_time": "2024-07-31T19:00:53.100256",
     "exception": false,
     "start_time": "2024-07-31T19:00:53.058490",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def plot_confusion_matrices(train_true, train_pred, val_true, val_pred, test_true, test_pred, labels):\n",
    "    # Create confusion matrices\n",
    "    train_conf_matrix = confusion_matrix(train_true, train_pred)\n",
    "    val_conf_matrix = confusion_matrix(val_true, val_pred)\n",
    "    test_conf_matrix = confusion_matrix(test_true, test_pred)\n",
    "\n",
    "    # Plot confusion matrices\n",
    "    fig, axes = plt.subplots(1, 3, figsize=(18, 6))\n",
    "\n",
    "    # Train Confusion Matrix\n",
    "    sns.heatmap(train_conf_matrix, annot=True, fmt='d', cmap='YlGnBu', \n",
    "                xticklabels=labels, yticklabels=labels, ax=axes[0])\n",
    "    axes[0].set_title('Train Confusion Matrix')\n",
    "    axes[0].set_xlabel('Predicted')\n",
    "    axes[0].set_ylabel('True')\n",
    "\n",
    "    # Validation Confusion Matrix\n",
    "    sns.heatmap(val_conf_matrix, annot=True, fmt='d', cmap='YlGnBu', \n",
    "                xticklabels=labels, yticklabels=labels, ax=axes[1])\n",
    "    axes[1].set_title('Validation Confusion Matrix')\n",
    "    axes[1].set_xlabel('Predicted')\n",
    "    axes[1].set_ylabel('True')\n",
    "\n",
    "    # Test Confusion Matrix\n",
    "    sns.heatmap(test_conf_matrix, annot=True, fmt='d', cmap='YlGnBu', \n",
    "                xticklabels=labels, yticklabels=labels, ax=axes[2])\n",
    "    axes[2].set_title('Test Confusion Matrix')\n",
    "    axes[2].set_xlabel('Predicted')\n",
    "    axes[2].set_ylabel('True')\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b969db0b",
   "metadata": {
    "papermill": {
     "duration": 0.016339,
     "end_time": "2024-07-31T19:00:53.138578",
     "exception": false,
     "start_time": "2024-07-31T19:00:53.122239",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<div style=\"text-align:center; background-color:#dc3545; padding:20px;\">\n",
    "  <h1 style=\"font-size:36px; color:#ffeeba;\"><b>3.Models Comparison </b></h1>\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1cce79a",
   "metadata": {
    "papermill": {
     "duration": 0.015337,
     "end_time": "2024-07-31T19:00:53.169602",
     "exception": false,
     "start_time": "2024-07-31T19:00:53.154265",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Here we create a pipline that contains:\n",
    "### 1.Text Processing for the input data\n",
    "### 2.Victorizing the text column\n",
    "### 3.Take an object of Random Forest Classifier \n",
    "### After the pipline is created We fit the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "4806867f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:53.202278Z",
     "iopub.status.busy": "2024-07-31T19:00:53.201832Z",
     "iopub.status.idle": "2024-07-31T19:00:58.096977Z",
     "shell.execute_reply": "2024-07-31T19:00:58.095567Z"
    },
    "papermill": {
     "duration": 4.91568,
     "end_time": "2024-07-31T19:00:58.100076",
     "exception": false,
     "start_time": "2024-07-31T19:00:53.184396",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Using backend ThreadingBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=-1)]: Done  42 tasks      | elapsed:    3.4s\n",
      "[Parallel(n_jobs=-1)]: Done  50 out of  50 | elapsed:    4.0s finished\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;text_processing&#x27;, TextProcessor(lower=True)),\n",
       "                (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                (&#x27;classifier&#x27;,\n",
       "                 RandomForestClassifier(n_estimators=50, n_jobs=-1,\n",
       "                                        random_state=42, verbose=1))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;text_processing&#x27;, TextProcessor(lower=True)),\n",
       "                (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                (&#x27;classifier&#x27;,\n",
       "                 RandomForestClassifier(n_estimators=50, n_jobs=-1,\n",
       "                                        random_state=42, verbose=1))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TextProcessor</label><div class=\"sk-toggleable__content\"><pre>TextProcessor(lower=True)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">CountVectorizer</label><div class=\"sk-toggleable__content\"><pre>CountVectorizer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(n_estimators=50, n_jobs=-1, random_state=42, verbose=1)</pre></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "Pipeline(steps=[('text_processing', TextProcessor(lower=True)),\n",
       "                ('vectorizer', CountVectorizer()),\n",
       "                ('classifier',\n",
       "                 RandomForestClassifier(n_estimators=50, n_jobs=-1,\n",
       "                                        random_state=42, verbose=1))])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "text_processor = TextProcessor(lower=True, stem=False)\n",
    "vectorizer = CountVectorizer(max_features=3000)\n",
    "RF = RandomForestClassifier(\n",
    "    n_estimators=50, random_state=42, n_jobs=-1, verbose=1\n",
    ")\n",
    "\n",
    "pipeline = Pipeline([\n",
    "    (\"text_processing\", text_processor), # Text processing step\n",
    "    (\"vectorizer\", CountVectorizer()),   # CountVectorizer step\n",
    "    (\"classifier\", RF)  # RandomForestClassifier step\n",
    "])\n",
    "\n",
    "pipeline.fit(train_df['Text'], train_df['Emotion'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f4e3350",
   "metadata": {
    "papermill": {
     "duration": 0.016517,
     "end_time": "2024-07-31T19:00:58.132943",
     "exception": false,
     "start_time": "2024-07-31T19:00:58.116426",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "### In the following code block, we preprocess the text data for training, testing, and validation datasets to ensure that the data frames are formatted correctly, facilitating accurate predictions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "07d4a5d9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:58.166569Z",
     "iopub.status.busy": "2024-07-31T19:00:58.166173Z",
     "iopub.status.idle": "2024-07-31T19:00:58.422024Z",
     "shell.execute_reply": "2024-07-31T19:00:58.420701Z"
    },
    "papermill": {
     "duration": 0.275809,
     "end_time": "2024-07-31T19:00:58.424903",
     "exception": false,
     "start_time": "2024-07-31T19:00:58.149094",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "process_pip = Pipeline(\n",
    "    [\n",
    "        (\"text_processing\", text_processor),\n",
    "    ]\n",
    ")\n",
    "\n",
    "x_train_procceced = process_pip.fit_transform(train_df['Text'])\n",
    "x_test_procceced = process_pip.transform(test_df['Text'])\n",
    "x_val_procceced = process_pip.transform(val_df['Text'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72dee68a",
   "metadata": {
    "papermill": {
     "duration": 0.015266,
     "end_time": "2024-07-31T19:00:58.455821",
     "exception": false,
     "start_time": "2024-07-31T19:00:58.440555",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# In the following code we predict the Y-hat for each x data frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e7e4dd4f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:58.490531Z",
     "iopub.status.busy": "2024-07-31T19:00:58.490109Z",
     "iopub.status.idle": "2024-07-31T19:00:59.518996Z",
     "shell.execute_reply": "2024-07-31T19:00:59.517833Z"
    },
    "papermill": {
     "duration": 1.050413,
     "end_time": "2024-07-31T19:00:59.522772",
     "exception": false,
     "start_time": "2024-07-31T19:00:58.472359",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=4)]: Using backend ThreadingBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    0.2s\n",
      "[Parallel(n_jobs=4)]: Done  50 out of  50 | elapsed:    0.2s finished\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train set accuracy: 0.9994335882186349\n",
      "Validation set accuracy: 0.8977599080987938\n",
      "Test set accuracy: 0.9109859154929577\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=4)]: Using backend ThreadingBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    0.0s\n",
      "[Parallel(n_jobs=4)]: Done  50 out of  50 | elapsed:    0.0s finished\n",
      "[Parallel(n_jobs=4)]: Using backend ThreadingBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    0.0s\n",
      "[Parallel(n_jobs=4)]: Done  50 out of  50 | elapsed:    0.0s finished\n"
     ]
    }
   ],
   "source": [
    "train_pred = pipeline.predict(x_train_procceced)\n",
    "train_accuracy = accuracy_score(train_df['Emotion'], train_pred)\n",
    "print(\"Train set accuracy:\", train_accuracy)\n",
    "\n",
    "# Validation set accuracy\n",
    "val_pred = pipeline.predict(x_val_procceced)\n",
    "val_accuracy = accuracy_score(val_df['Emotion'], val_pred)\n",
    "print(\"Validation set accuracy:\", val_accuracy)\n",
    "\n",
    "# Test set accuracy\n",
    "test_pred = pipeline.predict(x_test_procceced)\n",
    "test_accuracy = accuracy_score(test_df['Emotion'], test_pred)\n",
    "print(\"Test set accuracy:\", test_accuracy)\n",
    "\n",
    "RF_acc = test_accuracy"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9aeee77a",
   "metadata": {
    "papermill": {
     "duration": 0.016016,
     "end_time": "2024-07-31T19:00:59.555541",
     "exception": false,
     "start_time": "2024-07-31T19:00:59.539525",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### this is a confusion matricies to provide an insights about the predicted values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ee0a40c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:00:59.589657Z",
     "iopub.status.busy": "2024-07-31T19:00:59.589193Z",
     "iopub.status.idle": "2024-07-31T19:01:00.989950Z",
     "shell.execute_reply": "2024-07-31T19:01:00.988725Z"
    },
    "papermill": {
     "duration": 1.421095,
     "end_time": "2024-07-31T19:01:00.992893",
     "exception": false,
     "start_time": "2024-07-31T19:00:59.571798",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1800x600 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrices(\n",
    "    train_df['Emotion'], train_pred,\n",
    "    val_df['Emotion'], val_pred,\n",
    "    test_df['Emotion'], test_pred,\n",
    "    pipeline.classes_\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "221b9f71",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:01:01.032546Z",
     "iopub.status.busy": "2024-07-31T19:01:01.031335Z",
     "iopub.status.idle": "2024-07-31T19:01:28.405774Z",
     "shell.execute_reply": "2024-07-31T19:01:28.404382Z"
    },
    "papermill": {
     "duration": 27.397808,
     "end_time": "2024-07-31T19:01:28.408471",
     "exception": false,
     "start_time": "2024-07-31T19:01:01.010663",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;text_processing&#x27;, TextProcessor(lower=True)),\n",
       "                (&#x27;vectorizer&#x27;, CountVectorizer(max_features=3000)),\n",
       "                (&#x27;svm&#x27;, SVC(C=0.5, gamma=1, kernel=&#x27;linear&#x27;, random_state=42))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;text_processing&#x27;, TextProcessor(lower=True)),\n",
       "                (&#x27;vectorizer&#x27;, CountVectorizer(max_features=3000)),\n",
       "                (&#x27;svm&#x27;, SVC(C=0.5, gamma=1, kernel=&#x27;linear&#x27;, random_state=42))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TextProcessor</label><div class=\"sk-toggleable__content\"><pre>TextProcessor(lower=True)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">CountVectorizer</label><div class=\"sk-toggleable__content\"><pre>CountVectorizer(max_features=3000)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(C=0.5, gamma=1, kernel=&#x27;linear&#x27;, random_state=42)</pre></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "Pipeline(steps=[('text_processing', TextProcessor(lower=True)),\n",
       "                ('vectorizer', CountVectorizer(max_features=3000)),\n",
       "                ('svm', SVC(C=0.5, gamma=1, kernel='linear', random_state=42))])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.svm import SVC\n",
    "text_processor = TextProcessor(lower=True, stem=False)\n",
    "vectorizer = CountVectorizer(max_features=3000)\n",
    "svm = SVC(kernel=\"linear\",gamma=1, C=.5, random_state=42)\n",
    "svm_pipeline = Pipeline(\n",
    "    [\n",
    "        (\"text_processing\", text_processor),\n",
    "        (\"vectorizer\", vectorizer),\n",
    "        (\"svm\", svm),\n",
    "    ]\n",
    ")\n",
    "svm_pipeline.fit(train_df['Text'], train_df['Emotion']) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ece9b509",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:01:28.447150Z",
     "iopub.status.busy": "2024-07-31T19:01:28.446674Z",
     "iopub.status.idle": "2024-07-31T19:01:47.380347Z",
     "shell.execute_reply": "2024-07-31T19:01:47.378542Z"
    },
    "papermill": {
     "duration": 18.956635,
     "end_time": "2024-07-31T19:01:47.383269",
     "exception": false,
     "start_time": "2024-07-31T19:01:28.426634",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train set accuracy: 0.9805295950155763\n",
      "Validation set accuracy: 0.9287765651924181\n",
      "Test set accuracy: 0.9374647887323944\n"
     ]
    }
   ],
   "source": [
    "train_pred = svm_pipeline.predict(x_train_procceced)\n",
    "train_accuracy = accuracy_score(train_df['Emotion'], train_pred)\n",
    "print(\"Train set accuracy:\", train_accuracy)\n",
    "\n",
    "# Validation set accuracy\n",
    "val_pred = svm_pipeline.predict(x_val_procceced)\n",
    "val_accuracy = accuracy_score(val_df['Emotion'], val_pred)\n",
    "print(\"Validation set accuracy:\", val_accuracy)\n",
    "\n",
    "# Test set accuracy\n",
    "test_pred = svm_pipeline.predict(x_test_procceced)\n",
    "test_accuracy = accuracy_score(test_df['Emotion'], test_pred)\n",
    "print(\"Test set accuracy:\", test_accuracy)\n",
    "\n",
    "svm_acc= test_accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b8bf7aeb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:01:47.420738Z",
     "iopub.status.busy": "2024-07-31T19:01:47.420204Z",
     "iopub.status.idle": "2024-07-31T19:01:48.873707Z",
     "shell.execute_reply": "2024-07-31T19:01:48.872280Z"
    },
    "papermill": {
     "duration": 1.475718,
     "end_time": "2024-07-31T19:01:48.876699",
     "exception": false,
     "start_time": "2024-07-31T19:01:47.400981",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1800x600 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrices(\n",
    "    train_df['Emotion'], train_pred,\n",
    "    val_df['Emotion'], val_pred,\n",
    "    test_df['Emotion'], test_pred,\n",
    "    pipeline.classes_\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "11db3c5a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:01:48.921521Z",
     "iopub.status.busy": "2024-07-31T19:01:48.921093Z",
     "iopub.status.idle": "2024-07-31T19:01:57.560862Z",
     "shell.execute_reply": "2024-07-31T19:01:57.559104Z"
    },
    "papermill": {
     "duration": 8.666276,
     "end_time": "2024-07-31T19:01:57.565995",
     "exception": false,
     "start_time": "2024-07-31T19:01:48.899719",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;text_processing&#x27;, TextProcessor(lower=True)),\n",
       "                (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                (&#x27;classifier&#x27;,\n",
       "                 LogisticRegression(max_iter=1000, random_state=42))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;text_processing&#x27;, TextProcessor(lower=True)),\n",
       "                (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                (&#x27;classifier&#x27;,\n",
       "                 LogisticRegression(max_iter=1000, random_state=42))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TextProcessor</label><div class=\"sk-toggleable__content\"><pre>TextProcessor(lower=True)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">CountVectorizer</label><div class=\"sk-toggleable__content\"><pre>CountVectorizer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(max_iter=1000, random_state=42)</pre></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "Pipeline(steps=[('text_processing', TextProcessor(lower=True)),\n",
       "                ('vectorizer', CountVectorizer()),\n",
       "                ('classifier',\n",
       "                 LogisticRegression(max_iter=1000, random_state=42))])"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "text_processor = TextProcessor(lower=True, stem=False)\n",
    "\n",
    "vectorizer = CountVectorizer(max_features=3000)\n",
    "\n",
    "logistics = LogisticRegression(random_state=42, max_iter=1000)\n",
    "\n",
    "logs_pipeline = Pipeline([\n",
    "    (\"text_processing\", text_processor), # Text processing step\n",
    "    (\"vectorizer\", CountVectorizer()),   # CountVectorizer step\n",
    "    (\"classifier\", logistics)  # RandomForestClassifier step\n",
    "])\n",
    "\n",
    "logs_pipeline.fit(train_df['Text'], train_df['Emotion'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "2c653d04",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:01:57.702944Z",
     "iopub.status.busy": "2024-07-31T19:01:57.702539Z",
     "iopub.status.idle": "2024-07-31T19:01:58.459427Z",
     "shell.execute_reply": "2024-07-31T19:01:58.457829Z"
    },
    "papermill": {
     "duration": 0.850389,
     "end_time": "2024-07-31T19:01:58.462471",
     "exception": false,
     "start_time": "2024-07-31T19:01:57.612082",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train set accuracy: 0.9921410365335599\n",
      "Validation set accuracy: 0.9316484778862723\n",
      "Test set accuracy: 0.9391549295774648\n"
     ]
    }
   ],
   "source": [
    "train_pred = logs_pipeline.predict(x_train_procceced)\n",
    "train_accuracy = accuracy_score(train_df['Emotion'], train_pred)\n",
    "print(\"Train set accuracy:\", train_accuracy)\n",
    "\n",
    "# Validation set accuracy\n",
    "val_pred = logs_pipeline.predict(x_val_procceced)\n",
    "val_accuracy = accuracy_score(val_df['Emotion'], val_pred)\n",
    "print(\"Validation set accuracy:\", val_accuracy)\n",
    "\n",
    "# Test set accuracy\n",
    "test_pred = logs_pipeline.predict(x_test_procceced)\n",
    "test_accuracy = accuracy_score(test_df['Emotion'], test_pred)\n",
    "print(\"Test set accuracy:\", test_accuracy)\n",
    "\n",
    "logs_acc = test_accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "baf8c5b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:01:58.504439Z",
     "iopub.status.busy": "2024-07-31T19:01:58.503956Z",
     "iopub.status.idle": "2024-07-31T19:01:59.935468Z",
     "shell.execute_reply": "2024-07-31T19:01:59.934339Z"
    },
    "papermill": {
     "duration": 1.455835,
     "end_time": "2024-07-31T19:01:59.938012",
     "exception": false,
     "start_time": "2024-07-31T19:01:58.482177",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1800x600 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrices(\n",
    "    train_df['Emotion'], train_pred,\n",
    "    val_df['Emotion'], val_pred,\n",
    "    test_df['Emotion'], test_pred,\n",
    "    pipeline.classes_\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "54d7e34f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:01:59.980531Z",
     "iopub.status.busy": "2024-07-31T19:01:59.980093Z",
     "iopub.status.idle": "2024-07-31T19:02:49.099697Z",
     "shell.execute_reply": "2024-07-31T19:02:49.098204Z"
    },
    "papermill": {
     "duration": 49.167394,
     "end_time": "2024-07-31T19:02:49.125780",
     "exception": false,
     "start_time": "2024-07-31T19:01:59.958386",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;text_processing&#x27;, TextProcessor(lower=True, stem=True)),\n",
       "                (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                (&#x27;classifier&#x27;, MultinomialNB())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;text_processing&#x27;, TextProcessor(lower=True, stem=True)),\n",
       "                (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                (&#x27;classifier&#x27;, MultinomialNB())])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TextProcessor</label><div class=\"sk-toggleable__content\"><pre>TextProcessor(lower=True, stem=True)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" ><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">CountVectorizer</label><div class=\"sk-toggleable__content\"><pre>CountVectorizer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-16\" type=\"checkbox\" ><label for=\"sk-estimator-id-16\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "Pipeline(steps=[('text_processing', TextProcessor(lower=True, stem=True)),\n",
       "                ('vectorizer', CountVectorizer()),\n",
       "                ('classifier', MultinomialNB())])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.naive_bayes import MultinomialNB\n",
    "text_processor = TextProcessor(lower=True, stem=True)\n",
    "\n",
    "vectorizer = CountVectorizer(max_features=3000)\n",
    "\n",
    "MNB = MultinomialNB()\n",
    "\n",
    "MNB_pipeline = Pipeline([\n",
    "    (\"text_processing\", text_processor), # Text processing step\n",
    "    (\"vectorizer\", CountVectorizer()),   # CountVectorizer step\n",
    "    (\"classifier\", MNB)  # RandomForestClassifier step\n",
    "])\n",
    "\n",
    "MNB_pipeline.fit(train_df['Text'], train_df['Emotion'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "f7053e32",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:02:49.171373Z",
     "iopub.status.busy": "2024-07-31T19:02:49.170283Z",
     "iopub.status.idle": "2024-07-31T19:03:50.762091Z",
     "shell.execute_reply": "2024-07-31T19:03:50.760894Z"
    },
    "papermill": {
     "duration": 61.617301,
     "end_time": "2024-07-31T19:03:50.764859",
     "exception": false,
     "start_time": "2024-07-31T19:02:49.147558",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train set accuracy: 0.9346502407250071\n",
      "Validation set accuracy: 0.8655944859276278\n",
      "Test set accuracy: 0.8490140845070423\n"
     ]
    }
   ],
   "source": [
    "train_pred = MNB_pipeline.predict(x_train_procceced)\n",
    "train_accuracy = accuracy_score(train_df['Emotion'], train_pred)\n",
    "print(\"Train set accuracy:\", train_accuracy)\n",
    "\n",
    "# Validation set accuracy\n",
    "val_pred = MNB_pipeline.predict(x_val_procceced)\n",
    "val_accuracy = accuracy_score(val_df['Emotion'], val_pred)\n",
    "print(\"Validation set accuracy:\", val_accuracy)\n",
    "\n",
    "# Test set accuracy\n",
    "test_pred = MNB_pipeline.predict(x_test_procceced)\n",
    "test_accuracy = accuracy_score(test_df['Emotion'], test_pred)\n",
    "print(\"Test set accuracy:\", test_accuracy)\n",
    "\n",
    "MNB_acc = test_accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "bf8b7a9e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:03:50.809744Z",
     "iopub.status.busy": "2024-07-31T19:03:50.809324Z",
     "iopub.status.idle": "2024-07-31T19:03:52.221674Z",
     "shell.execute_reply": "2024-07-31T19:03:52.219869Z"
    },
    "papermill": {
     "duration": 1.439499,
     "end_time": "2024-07-31T19:03:52.224858",
     "exception": false,
     "start_time": "2024-07-31T19:03:50.785359",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1800x600 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrices(\n",
    "    train_df['Emotion'], train_pred,\n",
    "    val_df['Emotion'], val_pred,\n",
    "    test_df['Emotion'], test_pred,\n",
    "    pipeline.classes_\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "bb5e66cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:03:52.283065Z",
     "iopub.status.busy": "2024-07-31T19:03:52.282530Z",
     "iopub.status.idle": "2024-07-31T19:04:10.407070Z",
     "shell.execute_reply": "2024-07-31T19:04:10.405883Z"
    },
    "papermill": {
     "duration": 18.160462,
     "end_time": "2024-07-31T19:04:10.409616",
     "exception": false,
     "start_time": "2024-07-31T19:03:52.249154",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;text_processing&#x27;, TextProcessor(lower=True)),\n",
       "                (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                (&#x27;classifier&#x27;, GradientBoostingClassifier())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" ><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;text_processing&#x27;, TextProcessor(lower=True)),\n",
       "                (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                (&#x27;classifier&#x27;, GradientBoostingClassifier())])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" ><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TextProcessor</label><div class=\"sk-toggleable__content\"><pre>TextProcessor(lower=True)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-19\" type=\"checkbox\" ><label for=\"sk-estimator-id-19\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">CountVectorizer</label><div class=\"sk-toggleable__content\"><pre>CountVectorizer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" ><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GradientBoostingClassifier</label><div class=\"sk-toggleable__content\"><pre>GradientBoostingClassifier()</pre></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "Pipeline(steps=[('text_processing', TextProcessor(lower=True)),\n",
       "                ('vectorizer', CountVectorizer()),\n",
       "                ('classifier', GradientBoostingClassifier())])"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "text_processor = TextProcessor(lower=True, stem=False)\n",
    "\n",
    "vectorizer = CountVectorizer(max_features=3000)\n",
    "\n",
    "GB = GradientBoostingClassifier()\n",
    "\n",
    "GB_pipeline = Pipeline([\n",
    "    (\"text_processing\", text_processor), # Text processing step\n",
    "    (\"vectorizer\", CountVectorizer()),   # CountVectorizer step\n",
    "    (\"classifier\", GB)  # RandomForestClassifier step\n",
    "])\n",
    "\n",
    "GB_pipeline.fit(train_df['Text'], train_df['Emotion'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "d29ef7d2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:04:10.456609Z",
     "iopub.status.busy": "2024-07-31T19:04:10.456189Z",
     "iopub.status.idle": "2024-07-31T19:04:11.265679Z",
     "shell.execute_reply": "2024-07-31T19:04:11.264324Z"
    },
    "papermill": {
     "duration": 0.836269,
     "end_time": "2024-07-31T19:04:11.268374",
     "exception": false,
     "start_time": "2024-07-31T19:04:10.432105",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train set accuracy: 0.8954970263381479\n",
      "Validation set accuracy: 0.8770821367030442\n",
      "Test set accuracy: 0.8726760563380281\n"
     ]
    }
   ],
   "source": [
    "train_pred = GB_pipeline.predict(x_train_procceced)\n",
    "train_accuracy = accuracy_score(train_df['Emotion'], train_pred)\n",
    "print(\"Train set accuracy:\", train_accuracy)\n",
    "\n",
    "# Validation set accuracy\n",
    "val_pred = GB_pipeline.predict(x_val_procceced)\n",
    "val_accuracy = accuracy_score(val_df['Emotion'], val_pred)\n",
    "print(\"Validation set accuracy:\", val_accuracy)\n",
    "\n",
    "# Test set accuracy\n",
    "test_pred = GB_pipeline.predict(x_test_procceced)\n",
    "test_accuracy = accuracy_score(test_df['Emotion'], test_pred)\n",
    "print(\"Test set accuracy:\", test_accuracy)\n",
    "\n",
    "GB_acc = test_accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3766b832",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:04:11.315220Z",
     "iopub.status.busy": "2024-07-31T19:04:11.314817Z",
     "iopub.status.idle": "2024-07-31T19:04:12.733542Z",
     "shell.execute_reply": "2024-07-31T19:04:12.732374Z"
    },
    "papermill": {
     "duration": 1.445313,
     "end_time": "2024-07-31T19:04:12.735996",
     "exception": false,
     "start_time": "2024-07-31T19:04:11.290683",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1800x600 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrices(\n",
    "    train_df['Emotion'], train_pred,\n",
    "    val_df['Emotion'], val_pred,\n",
    "    test_df['Emotion'], test_pred,\n",
    "    pipeline.classes_\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "595b24e7",
   "metadata": {
    "papermill": {
     "duration": 0.023566,
     "end_time": "2024-07-31T19:04:12.783347",
     "exception": false,
     "start_time": "2024-07-31T19:04:12.759781",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<div style=\"text-align:center; background-color:#dc3545; padding:20px;\">\n",
    "  <h1 style=\"font-size:36px; color:#ffeeba;\"><b>4.Best Model Implementation</b></h1>\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "946692f7",
   "metadata": {
    "papermill": {
     "duration": 0.023433,
     "end_time": "2024-07-31T19:04:12.830392",
     "exception": false,
     "start_time": "2024-07-31T19:04:12.806959",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### The code segment creates a bar plot to visualize the accuracies of different machine learning models."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "276ee79c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:04:12.881268Z",
     "iopub.status.busy": "2024-07-31T19:04:12.879815Z",
     "iopub.status.idle": "2024-07-31T19:04:13.442531Z",
     "shell.execute_reply": "2024-07-31T19:04:13.441146Z"
    },
    "papermill": {
     "duration": 0.591068,
     "end_time": "2024-07-31T19:04:13.445290",
     "exception": false,
     "start_time": "2024-07-31T19:04:12.854222",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "accuracies = {\n",
    "    \"Multi Naive Bayes\": MNB_acc,\n",
    "    \"SVM\": svm_acc,\n",
    "    \"Random Forest\": RF_acc,\n",
    "    \"Logistic Regression\": logs_acc,\n",
    "    \"Gradient Boosting\": GB_acc\n",
    "}\n",
    "\n",
    "# Sort accuracies in descending order\n",
    "sorted_accuracies = sorted(accuracies.items(), key=lambda x: x[1], reverse=True)\n",
    "\n",
    "# Extract model names and accuracies\n",
    "model_names = [model[0] for model in sorted_accuracies]\n",
    "accuracy_values = [model[1] for model in sorted_accuracies]\n",
    "\n",
    "# Create countplot\n",
    "plt.figure(figsize=(10, 6))\n",
    "ax = sns.barplot(x=model_names, y=accuracy_values, palette=\"YlGnBu\")\n",
    "plt.xlabel(\"Model\")\n",
    "plt.ylabel(\"Accuracy\")\n",
    "plt.title(\"Accuracy of Models\")\n",
    "plt.xticks(rotation=45, ha='right')\n",
    "\n",
    "# Annotate each bar with its accuracy value\n",
    "for i, v in enumerate(accuracy_values):\n",
    "    ax.text(i, v + 0.01, f\"{v:.2f}\", ha='center', va='bottom')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca29fc4b",
   "metadata": {
    "papermill": {
     "duration": 0.024525,
     "end_time": "2024-07-31T19:04:13.495768",
     "exception": false,
     "start_time": "2024-07-31T19:04:13.471243",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### The code uses a technique called \"Voting Classifier\" to combine predictions from multiple machine learning models. It includes three models: Random Forest Classifier, Logistic Regression, and Support Vector Machine. These models are trained on textual data and corresponding emotions. The Voting Classifier learns from these individual models to make a final prediction."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "ac6df62f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:04:13.546089Z",
     "iopub.status.busy": "2024-07-31T19:04:13.544963Z",
     "iopub.status.idle": "2024-07-31T19:04:55.467418Z",
     "shell.execute_reply": "2024-07-31T19:04:55.466060Z"
    },
    "papermill": {
     "duration": 41.975772,
     "end_time": "2024-07-31T19:04:55.495358",
     "exception": false,
     "start_time": "2024-07-31T19:04:13.519586",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Using backend ThreadingBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=-1)]: Done  42 tasks      | elapsed:    3.3s\n",
      "[Parallel(n_jobs=-1)]: Done  50 out of  50 | elapsed:    3.9s finished\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-6 {color: black;background-color: white;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>VotingClassifier(estimators=[(&#x27;RFC&#x27;,\n",
       "                              Pipeline(steps=[(&#x27;text_processing&#x27;,\n",
       "                                               TextProcessor(lower=True)),\n",
       "                                              (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                                              (&#x27;classifier&#x27;,\n",
       "                                               RandomForestClassifier(n_estimators=50,\n",
       "                                                                      n_jobs=-1,\n",
       "                                                                      random_state=42,\n",
       "                                                                      verbose=1))])),\n",
       "                             (&#x27;Logistics Regression&#x27;,\n",
       "                              Pipeline(steps=[(&#x27;text_processing&#x27;,\n",
       "                                               TextProcessor(lower=True)),\n",
       "                                              (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                                              (&#x27;classifier&#x27;,\n",
       "                                               LogisticRegression(max_iter=1000,\n",
       "                                                                  random_state=42))])),\n",
       "                             (&#x27;SVM&#x27;,\n",
       "                              Pipeline(steps=[(&#x27;text_processing&#x27;,\n",
       "                                               TextProcessor(lower=True)),\n",
       "                                              (&#x27;vectorizer&#x27;,\n",
       "                                               CountVectorizer(max_features=3000)),\n",
       "                                              (&#x27;svm&#x27;,\n",
       "                                               SVC(C=0.5, gamma=1,\n",
       "                                                   kernel=&#x27;linear&#x27;,\n",
       "                                                   random_state=42))]))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-21\" type=\"checkbox\" ><label for=\"sk-estimator-id-21\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">VotingClassifier</label><div class=\"sk-toggleable__content\"><pre>VotingClassifier(estimators=[(&#x27;RFC&#x27;,\n",
       "                              Pipeline(steps=[(&#x27;text_processing&#x27;,\n",
       "                                               TextProcessor(lower=True)),\n",
       "                                              (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                                              (&#x27;classifier&#x27;,\n",
       "                                               RandomForestClassifier(n_estimators=50,\n",
       "                                                                      n_jobs=-1,\n",
       "                                                                      random_state=42,\n",
       "                                                                      verbose=1))])),\n",
       "                             (&#x27;Logistics Regression&#x27;,\n",
       "                              Pipeline(steps=[(&#x27;text_processing&#x27;,\n",
       "                                               TextProcessor(lower=True)),\n",
       "                                              (&#x27;vectorizer&#x27;, CountVectorizer()),\n",
       "                                              (&#x27;classifier&#x27;,\n",
       "                                               LogisticRegression(max_iter=1000,\n",
       "                                                                  random_state=42))])),\n",
       "                             (&#x27;SVM&#x27;,\n",
       "                              Pipeline(steps=[(&#x27;text_processing&#x27;,\n",
       "                                               TextProcessor(lower=True)),\n",
       "                                              (&#x27;vectorizer&#x27;,\n",
       "                                               CountVectorizer(max_features=3000)),\n",
       "                                              (&#x27;svm&#x27;,\n",
       "                                               SVC(C=0.5, gamma=1,\n",
       "                                                   kernel=&#x27;linear&#x27;,\n",
       "                                                   random_state=42))]))])</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>RFC</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-22\" type=\"checkbox\" ><label for=\"sk-estimator-id-22\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TextProcessor</label><div class=\"sk-toggleable__content\"><pre>TextProcessor(lower=True)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-23\" type=\"checkbox\" ><label for=\"sk-estimator-id-23\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">CountVectorizer</label><div class=\"sk-toggleable__content\"><pre>CountVectorizer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-24\" type=\"checkbox\" ><label for=\"sk-estimator-id-24\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(n_estimators=50, n_jobs=-1, random_state=42, verbose=1)</pre></div></div></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>Logistics Regression</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-25\" type=\"checkbox\" ><label for=\"sk-estimator-id-25\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TextProcessor</label><div class=\"sk-toggleable__content\"><pre>TextProcessor(lower=True)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-26\" type=\"checkbox\" ><label for=\"sk-estimator-id-26\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">CountVectorizer</label><div class=\"sk-toggleable__content\"><pre>CountVectorizer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-27\" type=\"checkbox\" ><label for=\"sk-estimator-id-27\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(max_iter=1000, random_state=42)</pre></div></div></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>SVM</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-28\" type=\"checkbox\" ><label for=\"sk-estimator-id-28\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TextProcessor</label><div class=\"sk-toggleable__content\"><pre>TextProcessor(lower=True)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-29\" type=\"checkbox\" ><label for=\"sk-estimator-id-29\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">CountVectorizer</label><div class=\"sk-toggleable__content\"><pre>CountVectorizer(max_features=3000)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-30\" type=\"checkbox\" ><label for=\"sk-estimator-id-30\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(C=0.5, gamma=1, kernel=&#x27;linear&#x27;, random_state=42)</pre></div></div></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "VotingClassifier(estimators=[('RFC',\n",
       "                              Pipeline(steps=[('text_processing',\n",
       "                                               TextProcessor(lower=True)),\n",
       "                                              ('vectorizer', CountVectorizer()),\n",
       "                                              ('classifier',\n",
       "                                               RandomForestClassifier(n_estimators=50,\n",
       "                                                                      n_jobs=-1,\n",
       "                                                                      random_state=42,\n",
       "                                                                      verbose=1))])),\n",
       "                             ('Logistics Regression',\n",
       "                              Pipeline(steps=[('text_processing',\n",
       "                                               TextProcessor(lower=True)),\n",
       "                                              ('vectorizer', CountVectorizer()),\n",
       "                                              ('classifier',\n",
       "                                               LogisticRegression(max_iter=1000,\n",
       "                                                                  random_state=42))])),\n",
       "                             ('SVM',\n",
       "                              Pipeline(steps=[('text_processing',\n",
       "                                               TextProcessor(lower=True)),\n",
       "                                              ('vectorizer',\n",
       "                                               CountVectorizer(max_features=3000)),\n",
       "                                              ('svm',\n",
       "                                               SVC(C=0.5, gamma=1,\n",
       "                                                   kernel='linear',\n",
       "                                                   random_state=42))]))])"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import VotingClassifier\n",
    "\n",
    "estimators=[\n",
    "        (\"RFC\", pipeline),\n",
    "        (\"Logistics Regression\", logs_pipeline),\n",
    "        (\"SVM\", svm_pipeline)]\n",
    "\n",
    "\n",
    "voting_classifier = VotingClassifier(estimators, voting='hard')\n",
    "voting_classifier.fit(train_df['Text'], train_df['Emotion'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "27f51cdb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:04:55.550401Z",
     "iopub.status.busy": "2024-07-31T19:04:55.549956Z",
     "iopub.status.idle": "2024-07-31T19:05:16.568092Z",
     "shell.execute_reply": "2024-07-31T19:05:16.566891Z"
    },
    "papermill": {
     "duration": 21.049408,
     "end_time": "2024-07-31T19:05:16.571035",
     "exception": false,
     "start_time": "2024-07-31T19:04:55.521627",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=4)]: Using backend ThreadingBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    0.2s\n",
      "[Parallel(n_jobs=4)]: Done  50 out of  50 | elapsed:    0.2s finished\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train set accuracy: 0.9935570659869726\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=4)]: Using backend ThreadingBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    0.0s\n",
      "[Parallel(n_jobs=4)]: Done  50 out of  50 | elapsed:    0.0s finished\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation set accuracy: 0.9299253302699598\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=4)]: Using backend ThreadingBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    0.0s\n",
      "[Parallel(n_jobs=4)]: Done  50 out of  50 | elapsed:    0.0s finished\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test set accuracy: 0.9430985915492958\n"
     ]
    }
   ],
   "source": [
    "\n",
    "train_pred = voting_classifier.predict(x_train_procceced)\n",
    "train_accuracy = accuracy_score(train_df['Emotion'], train_pred)\n",
    "print(\"Train set accuracy:\", train_accuracy)\n",
    "\n",
    "# Validation set accuracy\n",
    "val_pred = voting_classifier.predict(x_val_procceced)\n",
    "val_accuracy = accuracy_score(val_df['Emotion'], val_pred)\n",
    "print(\"Validation set accuracy:\", val_accuracy)\n",
    "\n",
    "# Test set accuracy\n",
    "test_pred = voting_classifier.predict(x_test_procceced)\n",
    "test_accuracy = accuracy_score(test_df['Emotion'], test_pred)\n",
    "print(\"Test set accuracy:\", test_accuracy)\n",
    "\n",
    "model_accuracy = test_accuracy"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6f0ea35b",
   "metadata": {
    "papermill": {
     "duration": 0.02478,
     "end_time": "2024-07-31T19:05:16.621564",
     "exception": false,
     "start_time": "2024-07-31T19:05:16.596784",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<div style=\"text-align:center; background-color:#dc3545; padding:20px;\">\n",
    "  <h1 style=\"font-size:36px; color:#ffeeba;\"><b>5.Model Validation </b></h1>\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c7543fd8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:05:16.673936Z",
     "iopub.status.busy": "2024-07-31T19:05:16.673522Z",
     "iopub.status.idle": "2024-07-31T19:05:16.680128Z",
     "shell.execute_reply": "2024-07-31T19:05:16.678628Z"
    },
    "papermill": {
     "duration": 0.036147,
     "end_time": "2024-07-31T19:05:16.682909",
     "exception": false,
     "start_time": "2024-07-31T19:05:16.646762",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Our Machine Learning model has an accuracy of 94.31%\n"
     ]
    }
   ],
   "source": [
    "print('Our Machine Learning model has an accuracy of {:.2f}%'.format(model_accuracy * 100))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "e58d0447",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:05:16.736153Z",
     "iopub.status.busy": "2024-07-31T19:05:16.735707Z",
     "iopub.status.idle": "2024-07-31T19:05:16.773199Z",
     "shell.execute_reply": "2024-07-31T19:05:16.771772Z"
    },
    "papermill": {
     "duration": 0.068489,
     "end_time": "2024-07-31T19:05:16.776924",
     "exception": false,
     "start_time": "2024-07-31T19:05:16.708435",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Predicted Emotion: joy\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=4)]: Using backend ThreadingBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    0.0s\n",
      "[Parallel(n_jobs=4)]: Done  50 out of  50 | elapsed:    0.0s finished\n"
     ]
    }
   ],
   "source": [
    "custom_text = \"I'm feeling happy and excited today\"\n",
    "predicted_emotion = voting_classifier.predict([custom_text])\n",
    "print(\"Predicted Emotion:\", predicted_emotion[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "e093a067",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:05:16.830866Z",
     "iopub.status.busy": "2024-07-31T19:05:16.830456Z",
     "iopub.status.idle": "2024-07-31T19:05:16.868801Z",
     "shell.execute_reply": "2024-07-31T19:05:16.867435Z"
    },
    "papermill": {
     "duration": 0.069331,
     "end_time": "2024-07-31T19:05:16.872131",
     "exception": false,
     "start_time": "2024-07-31T19:05:16.802800",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Predicted Emotion: sadness\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=4)]: Using backend ThreadingBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    0.0s\n",
      "[Parallel(n_jobs=4)]: Done  50 out of  50 | elapsed:    0.0s finished\n"
     ]
    }
   ],
   "source": [
    "custom_text = \"I'm realy don't even know why this is done for me!\"\n",
    "predicted_emotion = voting_classifier.predict([custom_text])\n",
    "print(\"Predicted Emotion:\", predicted_emotion[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "014a87cd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-31T19:05:16.926265Z",
     "iopub.status.busy": "2024-07-31T19:05:16.925101Z",
     "iopub.status.idle": "2024-07-31T19:05:16.962747Z",
     "shell.execute_reply": "2024-07-31T19:05:16.961346Z"
    },
    "papermill": {
     "duration": 0.067781,
     "end_time": "2024-07-31T19:05:16.965992",
     "exception": false,
     "start_time": "2024-07-31T19:05:16.898211",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=4)]: Using backend ThreadingBackend with 4 concurrent workers.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Predicted Emotion: fear\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    0.0s\n",
      "[Parallel(n_jobs=4)]: Done  50 out of  50 | elapsed:    0.0s finished\n"
     ]
    }
   ],
   "source": [
    "custom_text = \"I feel overwhelmed with sorrow\"\n",
    "predicted_emotion = voting_classifier.predict([custom_text])\n",
    "print(\"Predicted Emotion:\", predicted_emotion[0])"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 605165,
     "sourceId": 1085454,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 292.763299,
   "end_time": "2024-07-31T19:05:17.816748",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-31T19:00:25.053449",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
